xflags::xflags! {
    src "./src/flags.rs"
    cmd xtask {
        cmd install {
            optional --client
            optional --server
            optional --console
            optional --debug
        }
        cmd clean {
        }
    }
}
// generated start
// The following code is generated by `xflags` macro.
// Run `env UPDATE_XFLAGS=1 cargo build` to regenerate.
#[derive(Debug)]
pub struct Xtask {
    pub subcommand: XtaskCmd,
}

#[derive(Debug)]
pub enum XtaskCmd {
    Install(Install),
    Clean(Clean),
}

#[derive(Debug)]
pub struct Install {
    pub client: bool,
    pub server: bool,
    pub console: bool,
    pub debug: bool,
}

#[derive(Debug)]
pub struct Clean;

impl Xtask {
    #[allow(dead_code)]
    pub fn from_env() -> xflags::Result<Self> {
        Self::from_env_()
    }

    #[allow(dead_code)]
    pub fn from_vec(args: Vec<std::ffi::OsString>) -> xflags::Result<Self> {
        Self::from_vec_(args)
    }
}
// generated end
